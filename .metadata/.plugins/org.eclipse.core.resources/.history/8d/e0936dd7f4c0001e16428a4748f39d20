package com.te.ems.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.te.ems.dto.LoginDTO;
import com.te.ems.sevice.AuthService;
import com.te.ems.sevice.AuthServiceImpl;

import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
@RequestMapping(path = "/app/auth")
@Controller
public class AuthController {

	private final AuthService authService;

	@RequestMapping(path = "/register", method = RequestMethod.GET)
	public String register() {
		return "registration";
	}

	@RequestMapping(path = "/register", method = RequestMethod.POST)
	public String register(HttpServletRequest request, ModelMap modelMap) {
		System.out.println("We reached here! register(HttpServletRequest request)");
		String employeeId = request.getParameter("empId");
		String employeeAge = request.getParameter("empAge");
		String employeeEmail = request.getParameter("empEmail");
		String password = request.getParameter("password");

		// TODO: Implement registration
		employeeId = authService.register(employeeId, employeeAge, employeeEmail, password);

		modelMap.addAttribute("message", "Registration successfull!");
		return "login";
	}

	@RequestMapping(path = "/login", method = RequestMethod.GET)
	public String login() {
		return "login";
	}

	@RequestMapping(path = "/login", method = RequestMethod.POST)
	public String login(@ModelAttribute LoginDTO loginDTO, Model model) {
		System.out.println("We are in login(@ModelAttribute Object o)!");
		System.out.println(loginDTO.getEmpId());
		System.out.println(loginDTO.getPassword());

		// TODO: Implement login
		String employeeId = authService.login(loginDTO);

		if (!loginDTO.getPassword().equals("Password")) {
			model.addAttribute("message", "Login un-successfull!");
			return "login";
		}
		return "welcome";
	}

	@RequestMapping(path = "/resetPassword", method = RequestMethod.GET)
	public String resetPassword() {
		return "resetPassword";
	}

	@RequestMapping(path = "/resetPassword", method = RequestMethod.POST)
	public String resetPassword(@RequestParam(name = "empId") String employeeId,
			@RequestParam(name = "oldPassword") String oldPassword,
			@RequestParam(name = "newPassword") String newPassword,
			@RequestParam(name = "retypeNewPassword") String retypeNewPassword, Model model) {

		System.out.println(employeeId);
		System.out.println(oldPassword);
		System.out.println(newPassword);
		System.out.println(retypeNewPassword);
		if (!newPassword.equals(retypeNewPassword)) {
			model.addAttribute("message", "Reset password un-successfull!");
			return "resetPassword";
		}
		model.addAttribute("message", "Reset password successfull!");
		return "login";
	}

}
